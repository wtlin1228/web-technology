scalar Time
# Types
type Category {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time
  dessertList: [Dessert!]
}

type Dessert {
  id: ID!
  name: String!
  description: String
  unit: String!
  amount: Int!
  amountMinimum: Int!
  amountInterval: Int!
  degreeTop: String!
  degreeDown: String!
  bakingTime: Int!
  bigImageUrl: String!
  smallImageUrl: String!
  thumbnailUrl: String!
  createdAt: Time!
  updatedAt: Time
  stepList: [Step!]
  ingredientGroupList: [IngredientGroup!]
  category: Category!
}

type IngredientGroup {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time
  ingredientList: [Ingredient!]
  dessert: Dessert!
}

type Ingredient {
  id: ID!
  name: String!
  unit: String!
  amount: Int!
  createdAt: Time!
  updatedAt: Time
  ingredientGroup: IngredientGroup!
}

type Step {
  id: ID!
  name: String!
  content: String!
  notice: String!
  order: Int!
  createdAt: Time!
  updatedAt: Time
  dessert: Dessert!
}

# Input Types
input CategoryInput {
  name: String
}

input DessertInput {
  name: String
  description: String
  unit: String
  amount: Int
  amountMinimum: Int
  amountInterval: Int
  degreeTop: String
  degreeDown: String
  bakingTime: Int
  bigImageUrl: String
  smallImageUrl: String
  thumbnailUrl: String
  categoryId: String
}

input IngredientGroupInput {
  name: String
  dessertId: String
}

input IngredientInput {
  name: String
  unit: String
  amount: Int
  ingredientGroupId: String
}

input StepInput {
  name: String
  content: String
  notice: String
  order: Int
  dessertId: String
}

# Define mutations here
type Mutation {
  createCategory(input: CategoryInput): Category!
  updateCategory(id: ID!, input: CategoryInput): Category!
  deleteCategory(id: ID!): Boolean!

  createDessert(input: DessertInput): Dessert!
  updateDessert(id: ID!, input: DessertInput): Dessert!
  deleteDessert(id: ID!): Boolean!

  createIngredientGroup(input: IngredientGroupInput): IngredientGroup!
  updateIngredientGroup(id: ID!, input: IngredientGroupInput): IngredientGroup!
  deleteIngredientGroup(id: ID!): Boolean!

  createIngredient(input: IngredientInput): Ingredient!
  updateIngredient(id: ID!, input: IngredientInput): Ingredient!
  deleteIngredient(id: ID!): Boolean!

  createStep(input: StepInput): Step!
  updateStep(id: ID!, input: StepInput): Step!
  deleteStep(id: ID!): Boolean!
}

# Define queries here
type Query {
  categories: [Category!]!
  category(id: ID!): Category

  desserts: [Dessert!]!
  dessert(id: ID!): Dessert

  ingredientGroups: [IngredientGroup!]!
  ingredientGroup(id: ID!): IngredientGroup

  ingredients: [Ingredient!]!
  ingredient(id: ID!): Ingredient

  steps: [Step!]!
  step(id: ID!): Step

}